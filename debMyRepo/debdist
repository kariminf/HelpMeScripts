#!/bin/bash

# ***** debdist
# This script helps to destibute debian files into subfolders
# Use: debdist <folder>
# <folder>: The folder where the deb files are.
#
# The script will create a folder "others" for packages coming from "getdeb" and "wenupd8"
# and a folder for main packages.
# Inside each one, it will distribute the files using the first character then using the name
#
# Copyright (C) 2016-2018  Abdelkrime Aries <kariminfo0@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# A set of componenets
declare -A comp

main () {

  if [ -z "$1" ]
  then
    echo "Specify the source folder"
    echo ""
    help
    exit 0
  fi

  if [ "$1" == "-h" ]; then
    help
    exit 0
  fi

  folder=$1

  if ! [[ $folder =~ ^.*/$ ]]
  then
    folder="$folder/"
  fi

  if [ ! -d "$folder" ]
  then
    echo "Folder $folder does not exist"
    echo ""
    help
    exit 0
  fi

  getComponents $folder

  createComponents $folder

  # Looking for all .deb files in the folder
  for deb in $folder*.deb
  do
    populateComponents $folder ${deb}
  done
}

getComponents () {

  echo "components list exists"

  [ -f "$1comp.list" ] || return 0

  while IFS='' read -r line || [[ -n "$line" ]]; do
    s=($line)
    [ -n "${comp[${s[1]}]}" ] || declare -g -A ${s[1]}
    comp[${s[1]}]=1
    declare -n list="${s[1]}"
    list[${s[0]}]=1
  done < "$1comp.list"
}

createComponents () {
  if ! [[ -f $1comp.list ]]
  then
    return
  fi

  for m in "${!comp[@]}"
  do
    mkdir -p "$1${m}/"
  done
  mkdir -p "$1main/"
}

populateComponents () {

  debn=${2##*/}

  for cmp in "${!comp[@]}"
  do
    declare -n list="${cmp}"
    for match in "${!list[@]}"
    do
      if [[ $debn =~ .*${match}.*$ ]]
      then
        #echo "${cmp}: $2"
        distribute $deb $1$cmp/
        return 0
      fi
    done
  done
  #echo "main: $2"
  distribute $deb $1main/
}

# Function to distribute the packages using their names
distribute () {
  deb=$1
  to=$2
  debn=${deb##*/}
  if [[ $debn =~ ^libreoffice.*$ ]]
  then
    mkdir -p ${to}l/libreoffice
    mv $deb ${to}l/libreoffice
    return 0
  fi

  name=""
  if [[ $debn =~ ^lib([^_]{2}[^-_]*)[-_].*$ ]]
  then
    name=${BASH_REMATCH[1]}
  else
    if [[ $debn =~ ^([^_]{2}[^-_]*)[-_].*$ ]]
    then
      name=${BASH_REMATCH[1]}
    fi
  fi

  name=$( echo $name | tr 'A-Z' 'a-z' )
  start=$( echo $name | cut -c 1-1 )
  #echo $name
  mkdir -p $to$start/$name
  mv $1 $to$start/$name
  echo "$1 moved to $to$start/$name"

}

help () {
  echo "The script will create a \"main\" component inside the specified folder."
  echo "if a file named \"comp.list\" exists inside this folder."
  echo "\"comp.list\" contains lines such as: <word> <component>."
  echo "The packages with names containing the specified word will be sent to the component."
  echo "Inside each component, it will distribute the files using the first character then using the name"
  echo ""
  echo "Usage: debdist <folder>"
  echo "<folder>: The folder where the deb files are."
}

main "$@"
